swagger: "2.0"

info:
  title: List Notifications R/W
  description: Writes new List Notifications, and offers a Read API
  version: 0.0.0
  contact:
    name: Dynamic Publishing
    email: Dynamic.Publishing@ft.com

host: api.ft.com

schemes:
  - http
  - https

basePath: /

paths:
  /lists/notifications:
    get:
      summary: Read List Notifications
      description: Displays a single page of notifications since the date provided, with a maximum of 50 notifications per page. After your initial request, the link with `rel` property `next` (from the `links` object) **must** be used for your subsequent request, or you could miss notifications.
      tags:
        - Public API
      parameters:
        - name: since
          in: query
          required: true
          description: Only show notifications after this date.
          x-example: "2018-01-15T11:16:33.403976795Z"
          type: string
          format: date-time
      responses:
        200:
          description: Shows a single page of notifications.
          examples:
            application/json:
              requestUrl: "http://api.ft.com/lists/notifications?since=2016-11-19T16:10:57.398Z"
              notifications:
                - type: "http://www.ft.com/thing/ThingChangeType/UPDATE"
                  id: "http://api.ft.com/things/b220c4a0-b511-11e6-ba85-95d1533d9a62"
                  apiUrl: "http://api.ft.com/lists/b220c4a0-b511-11e6-ba85-95d1533d9a62"
                  title: "Investing in Turkey Top Stories"
                  publishReference: "tid_plwbovtcqv"
                  lastModified: "2016-11-29T03:59:35.999Z"
                  links:
                    - href: "http://api.ft.com/lists/notifications?since=2017-01-16T10%3A54%3A50.655Z"
                      rel: next
        400:
          description: A validation error has occurred, please see the error message for more details.
          examples:
            application/json:
              message: User didn't provide since date.
        500:
          description: We failed to read data from our underlying database, or another unexpected internal server error occurred.
          examples:
            application/json:
              message: Failed to retrieve list notifications due to internal server error.
  /lists/{uuid}:
    put:
      summary: Write new List Notifications
      description: FOR INTERNAL USE ONLY!
      tags:
        - Internal API
      consumes:
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          description: The uuid of the List we're notifying about.
          x-example: ac1cc220-3e0d-4a34-855f-fc0cf205bc35
          type: string
        - name: X-Request-Id
          in: header
          required: true
          description: The transaction id for this List publish.
          x-example: tid_abcdefghijklmn
          type: string
        - name: body
          in: body
          description: The fully transformed List body. Additional fields are ignored.
          schema:
            type: object
            properties:
              uuid:
                type: string
              title:
                type: string
              eventType:
                type: string
              publishReference:
                type: string
              lastModified:
                type: string
                format: date-time
            required:
              - uuid
            example:
              uuid: ac1cc220-3e0d-4a34-855f-fc0cf205bc35
      responses:
        200:
          description: The List notification has been written successfully.
        400:
          description: The request body did not pass validation. This can be caused by malformed json, invalid uuids, or if the uuid in the url path did not match the uuid present in the List body.
          examples:
            application/json:
              message: Invalid Request body.
        500:
          description: We failed to write data to our underlying database, or another unexpected internal server error occurred.
          examples:
            application/json:
              message: An internal server error prevented processing of your request.
  /__ping:
    get:
      summary: Ping
      description: Returns "pong" if the server is running.
      produces:
        - text/plain; charset=utf-8
      tags:
        - Health
      responses:
        200:
          description: We return pong in plaintext only.
          examples:
            text/plain; charset=utf-8: pong
  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        200:
          description: Should always return 200 along with the output of the healthchecks - regardless of whether the healthchecks failed or not. Please inspect the overall `ok` property to see whether or not the application is healthy.
          examples:
            application/json:
              checks:
                - businessImpact: "Notifications for list changes will not be available to API consumers (NextFT)."
                  checkOutput: ""
                  lastUpdated: "2017-01-16T10:26:47.222805121Z"
                  name: "CheckConnectivityToListsDatabase"
                  ok: true
                  panicGuide: "https://sites.google.com/a/ft.com/ft-technology-service-transition/home/run-book-library/list-notifications-rw-runbook"
                  severity: 1
                  technicalSummary: "The service is unable to connect to MongoDB. Notifications cannot be written to or read from the store."
              description: Notifies clients of updates to UPP Lists.
              name: list-notifications-rw
              ok: true
              schemaVersion: 1
  /__build-info:
    get:
      summary: Build Information
      description: Returns application build info, such as the git repository and revision, the golang version it was built with, and the app release version.
      produces:
        - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        200:
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: "v0.1.1"
              repository: "https://github.com/Financial-Times/list-notifications-rw.git"
              revision: "7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd"
              builder: "go version go1.6.3 linux/amd64"
              dateTime: "20161123122615"
  /__gtg:
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's Good-To-Go.
      tags:
        - Health
      produces:
          - text/plain; charset=US-ASCII
      responses:
        200:
          description: The application is healthy enough to perform all its functions correctly - i.e. good to go.
          examples:
               text/plain; charset=US-ASCII: OK
        503:
          description: >
            One or more of the applications healthchecks have failed,
            so please do not use the app. See the /__health endpoint for more detailed information.
  /__log:
    post:
      summary: Logging Control
      description: Updates the log level for the application.
      tags:
        - Debugging
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: The log level to change to.
          schema:
            type: object
            properties:
              level:
                type: string
                enum:
                  - info
                  - debug
            required:
              - name
            example:
              level: debug
      responses:
        200:
          description: The log level has been updated as required.
          examples:
            application/json:
              message: Log level changed to debug
        400:
          description: The level can only be "info" or "debug", all other levels (including junk text) will be ignored.
          examples:
            application/json:
              message: Please specify one of [debug, info]
