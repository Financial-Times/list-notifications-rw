apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: LOG_LEVEL
            value: "{{ .Values.env.LOG_LEVEL }}"
          - name: DB_NAME
            value: "{{ .Values.env.DB_NAME }}"
          - name: DB_COLLECTION
            value: "{{ .Values.env.DB_COLLECTION }}"
          - name: DOCDB_CLUSTER_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: aws.documentdb.cluster.address
          - name: DOCDB_USERNAME
            valueFrom:
              secretKeyRef:
                name: global-secrets
                key: aws.doc-db.username
          - name: DOCDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: global-secrets
                key: aws.doc-db.password
          - name: DUMP_REQUESTS
            value: "{{ .Values.env.DUMP_REQUESTS }}"
          - name: API_HOST
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: api.host
          - name: CACHE_TTL
            valueFrom:
              configMapKeyRef:
                name: global-config
                key: cache-max-age
          - name: LOG_LEVEL
            value: "{{ .Values.env.LOG_LEVEL }}"
          - name: MONGO_DATABASE
            value: "{{ .Values.env.mongo.database }}"
          - name: MONGO_COLLECTION
            value: "{{ .Values.env.mongo.collection }}"
        ports:
          - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
            path: "/__gtg"
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 30
        resources:
{{ toYaml .Values.resources | indent 12 }}
